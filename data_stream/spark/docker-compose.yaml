version: '3'

services:
  redis:
    image: redis:6.0.6
    ports:
      - "6379:6379"
      
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ./zookeeper_data:/var/lib/zookeeper/data
      - ./zookeeper_datalog:/var/lib/zookeeper/log
    networks:
      - spark-network
  
  kafka:
    image: confluentinc/cp-kafka:5.5.1
    container_name: kafka
    ports:
      - "9092:9092"
    expose:
      - "19092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    depends_on:
      - zookeeper
    volumes:
      - ./kafka_data:/var/lib/kafka/data
    networks:
      - spark-network
  
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:19092
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - spark-network

  spark:
    image: docker.io/bitnami/spark:3.2.3
    hostname: spark
    container_name: spark-master
    depends_on:
      - zookeeper
    user: root
    restart: always
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_WEBUI_PORT=8080
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_DAEMON_JAVA_OPTS=-Dspark.deploy.recoveryMode=ZOOKEEPER -Dspark.deploy.zookeeper.url=zookeeper:2181 -Dspark.deploy.zookeeper.dir=/spark
    ports:
      - '8080:8080'
      - '7077:7077'
      - '4040:4040'
      - '9999:9999'
    volumes:
      - ./jars_dir:/opt/bitnami/spark/ivy:z
    networks:
      - spark-network

  spark-worker-1:
    image: docker.io/bitnami/spark:3.2.3
    container_name: worker_1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_DAEMON_JAVA_OPTS=-Dspark.deploy.recoveryMode=ZOOKEEPER -Dspark.deploy.zookeeper.url=zookeeper:2181 -Dspark.deploy.zookeeper.dir=/spark
    ports:
      - '4041:4040'
    depends_on:
      - zookeeper
      - spark
    networks:
      - spark-network

  spark-worker-2:
    image: docker.io/bitnami/spark:3.2.3
    container_name: worker_2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_DAEMON_JAVA_OPTS=-Dspark.deploy.recoveryMode=ZOOKEEPER -Dspark.deploy.zookeeper.url=zookeeper:2181 -Dspark.deploy.zookeeper.dir=/spark
    ports:
      - '4042:4040'
    depends_on:
      - zookeeper
      - spark
    networks:
      - spark-network

networks:
  spark-network:
    driver: bridge

volumes:
  zookeeper_data:
  zookeeper_datalog:
  kafka_data: